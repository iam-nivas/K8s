Replicaset --> 

rs_pod.yaml

apiVersion: v1
kind: Pod
metadata:
  name: nginx1
  labels:
    app: nginx_1
spec:
  containers:
    - image: nginx:latest
      name: nginx


replicaset.yaml

apiVersion: apps/v1
kind: ReplicaSet
metadata:
  name: rs-nginx
  labels:
    app: nginx
spec:
  replicas: 3
  selector:
    matchExpressions:
      - {key: app, operator: In, values: [nginx_1, nginx_2]}
  template:
    metadata:
      name: nginx
      labels:
        app: nginx_2
    spec:
      containers:
        - image: nginx:latest
          name: nginx


Deployment -->
Commands:

kubectl create deployment hello-la --image=nginx:1.19.2
kubectl get pods
kubectl get deploy
kubectl get rs
kubectl expose deployment hello-la --type=LoadBalancer --port 80 --target-port 80
kubectl get service
kubectl scale deployment hello-la --replicas=3
kubectl autoscale deployment hello-la --max 6 --min 4 --cpu-percent 50
kubectl set image deployment/hello-la hello-la=nginx:1.19.3
kubectl rollout history deployment hello-la
kubectl rollout undo deployments hello-la
kubectl rollout pause deployment hello-la
kubectl rollout resume deployment hello-la

Yaml file:

apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx-deployment
spec:
  selector:
    matchLabels:
      app: nginx_deploy
  replicas: 2 # tells deployment to run 2 pods matching the template
  template:
    metadata:
      labels:
        app: nginx_deploy
    spec:
      containers:
      - name: nginx
        image: nginx:1.7.8
        ports:
        - containerPort: 80
		  


