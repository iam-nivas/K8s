HPA --> 

apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx-deploy
spec:
  selector:
    matchLabels:
      app: nginx
  replicas: 1
  template:
    metadata:
      labels:
        app: nginx
    spec:
      containers:
      - name: nginxcontainer
        image: nginx:1.17
        resources:
          limits:
            cpu: 1m
			memory: 40Mi
          requests:
            cpu: 1m
			memory: 30Mi
=====================================================

apiVersion: autoscaling/v1
kind: HorizontalPodAutoscaler
metadata:
  name: nginx-hpa
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: nginx-deploy
  minReplicas: 1
  maxReplicas: 3
  targetCPUUtilizationPercentage: 1
=====================================================

Infinite loop --> script to execute in pod to generate some CPU usage

cat <<EOF | tee infinite.sh
#!/bin/bash
for (( ; ; ))
do
   echo $HOME
   echo $SHELL
   mkdir /testing
   touch /testing/file{1,2,3,4,5,6,7,8,9}
   ls -al /testing
   rm -rf /testing
done
EOF
=====================================================


Storage --> 

apiVersion: storage.k8s.io/v1
kind: StorageClass
metadata:
  name: standard
provisioner: kubernetes.io/gce-pd

---
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: testpvc
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 3Gi
  storageClassName: standard
  
---
apiVersion: v1
kind: Pod
metadata:
  name: pod-pvc
spec:
  containers:
    - name: myfrontend
      image: nginx
      volumeMounts:
      - mountPath: "/var/www/html"
        name: mypd
  volumes:
    - name: mypd
      persistentVolumeClaim:
        claimName: testpvc
		
		
Commands -->
kubectl get sc
kubectl get pvc
kubectl get pv
kubectl exec -it pod-pvc bash
		
